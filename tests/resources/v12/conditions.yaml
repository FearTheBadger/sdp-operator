apiVersion: beta.appgate.com/v1
kind: Condition
metadata:
  name: condition-2
spec:
  expression: ' var result = false; /*password*/ if (claims.user.hasPassword(''condition-2'',
    60)) { return true; } /*end password*/ return result; '
  name: condition-2
  remedyMethods:
  - claimSuffix: test
    message: test
    type: PasswordAuthentication
  repeatSchedules:
  - 1h
  - '13:32'
  tags:
  - api-created
  - automated
  - k8s
---
apiVersion: beta.appgate.com/v1
kind: Condition
metadata:
  name: always
spec:
  expression: return true;
  name: Always
  notes: Condition for built-in usage.
  remedyMethods: []
  repeatSchedules: []
  tags:
  - builtin
---
apiVersion: beta.appgate.com/v1
kind: Condition
metadata:
  name: condition-3
spec:
  expression: ' var result = false; /*password*/ if (claims.user.hasPassword(''condition-3'',
    60)) { return true; } /*end password*/ return result; '
  name: condition-3
  remedyMethods: []
  repeatSchedules:
  - 1h
  - '13:32'
  tags:
  - api-created
  - automated
  - k8s
---
apiVersion: beta.appgate.com/v1
kind: Condition
metadata:
  name: condition-1
spec:
  expression: ' var result = false; /*password*/ if (claims.user.hasPassword(''condition-1'',
    60)) { return true; } /*end password*/ return result; '
  name: condition-1
  remedyMethods: []
  repeatSchedules:
  - 1h
  - '13:32'
  tags:
  - api-created
  - automated
  - k8s

